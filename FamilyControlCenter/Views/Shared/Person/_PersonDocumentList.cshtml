@model IEnumerable<ActivityDocumentsViewModel>

@{ 
    int i = 0;
}
@foreach (var vm in Model)
{
    i++;
    string activityName = (vm.Activity.Activity ?? Resources.Resource.Other);

    <div class="card">
        <div class="card-header">
            @activityName
        </div>
        <div class="card-body">
            <label for="UploadFile_@i" class="btn btn-primary btn-edges input-group-addon">
                <span class="fas fa-file-upload"></span>
                <span class="toggle-text">@Resource.BtnUploadFile</span>
            </label>
            <div id="ActivityId_@i" class="hide">@vm.Activity.Id</div>
            <input id="UploadFile_@i" class="file-uploader hide" type="file" name="files[]" data-multiple-caption="{count} notimplted" multiple="" aria-invalid="false">

            <div class="card-columns">
                @foreach (var file in vm.Documents)
                {
                    <div class="card">
                        <div class="card-header fullwidth">
                            <a href="#" id="DeleteDocument" fileid="@file.Id"><span class="text-danger fas fa-trash-alt"></span></a>
                        </div>
                        <div class="card-body">
                            @if (ContentTypeHelper.IsDocument(file.FileType))
                            {
                                <img class="thumbnail" src="~/Content/file-image.png" alt="" />
                            }
                            else if (ContentTypeHelper.IsVideo(file.FileType))
                            {
                                <img class="thumbnail" src="~/Content/file-image.png" alt="" />
                            }
                            else if (ContentTypeHelper.IsSound(file.FileType))
                            {
                                <img class="thumbnail" src="~/Content/sound-image.png" alt="" />
                            }
                            else if (ContentTypeHelper.IsImage(file.FileType))
                            {
                                string img64 = Convert.ToBase64String(file.BinaryContent);
                                string img64Url = string.Format("data:image/" + file.FileType + ";base64,{0}", img64);
                                <img class="thumbnail" src="@img64Url" alt="" />
                            }
                            <label>@file.Name</label>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
}