@model List<PersonName>

@{
    RelationType type = (RelationType)ViewData["RelationType"];
    bool sex = (bool)ViewData["Sex"];
}

@Resource.ResourceManager.GetLocalizedStringForEnumValue(type, sex)
@switch (type)
{
    case RelationType.FatherMother:
        <span class="fas text-danger fa-tint"></span>
        break;
    case RelationType.SonDaughter:
        <span class="fas text-danger fa-tint"></span>
        break;
    case RelationType.BrotherSister:
        <span class="fas text-danger fa-tint"></span>
        break;
    case RelationType.InLawFatherMother:
        <span class="fas fa-tint"></span>
        break;
    case RelationType.InLawSonDaughter:
        <span class="fas fa-tint"></span>
        break;
    case RelationType.InLawBrotherSister:
        <span class="fas fa-tint"></span>
        break;
    case RelationType.StepBrotherSister:
        <span class="fas fa-tint"></span>
        break;
    case RelationType.StepFatherMother:
        <span class="fas fa-tint"></span>
        break;
    case RelationType.StepSonDaughter:
        <span class="fas fa-tint"></span>
        break;
    case RelationType.UncleAunt:
        <span class="fas text-danger fa-tint"></span>
        break;
    case RelationType.Cousins:
        <span class="fas text-danger fa-tint"></span>
        break;
    case RelationType.NephewNiece:
        <span class="fas text-danger fa-tint"></span>
        break;
    case RelationType.GrandSonDaughter:
        <span class="fas text-danger fa-tint"></span>
        break;
    case RelationType.GrandFatherMother:
        <span class="fas text-danger fa-tint"></span>
        break;
    case RelationType.Siblings:
        <span class="fas text-danger fa-tint"></span>
        break;
    case RelationType.InLawSiblings:
        <span class="fas fa-tint"></span>
        break;
    default:
        break;
}